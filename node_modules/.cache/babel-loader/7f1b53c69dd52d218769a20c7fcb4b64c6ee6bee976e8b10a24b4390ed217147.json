{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\n\n// royal-bazar web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAyVNY4SBta9ec7IUTBkuAp3FXF0KZMUZ4\",\n  authDomain: \"royal-bazar-4cda1.firebaseapp.com\",\n  projectId: \"royal-bazar-4cda1\",\n  storageBucket: \"royal-bazar-4cda1.appspot.com\",\n  messagingSenderId: \"1083508214380\",\n  appId: \"1:1083508214380:web:7f6c6f9d703e049d4ca649\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = async () => signInWithPopup(auth, provider);\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  //console.log(userDocRef);\n\n  const userSnapshot = await getDoc(userDocRef);\n  //console.log(userSnapshot);\n  //console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt,\n        ...additionalInformation\n      });\n    } catch (error) {\n      console.log('error creating the user', error.message);\n    }\n  }\n  return userDocRef;\n};\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const SignInAuthUserWithEmailAndPassword = async (email, password) => {\n  if (!email || !password) return;\n  return await signInWithEmailAndPassword(auth, email, password);\n};\n_c = SignInAuthUserWithEmailAndPassword;\nvar _c;\n$RefreshReg$(_c, \"SignInAuthUserWithEmailAndPassword\");","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","additionalInformation","userDocRef","uid","userSnapshot","exists","displayName","email","createdAt","Date","error","console","log","message","createAuthUserWithEmailAndPassword","password","SignInAuthUserWithEmailAndPassword","_c","$RefreshReg$"],"sources":["D:/Web Developement/React Projects/royal-bazar/src/utils/firebase/firebase.utils.jsx"],"sourcesContent":["import {initializeApp} from 'firebase/app';\r\nimport {getAuth,\r\n    signInWithRedirect, \r\n    signInWithPopup, \r\n    GoogleAuthProvider,\r\n    createUserWithEmailAndPassword,\r\n    signInWithEmailAndPassword,\r\n    } from 'firebase/auth';\r\nimport {\r\n    getFirestore,\r\n    doc,\r\n    getDoc,\r\n    setDoc\r\n        } from 'firebase/firestore'\r\n\r\n// royal-bazar web app's Firebase configuration\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyAyVNY4SBta9ec7IUTBkuAp3FXF0KZMUZ4\",\r\n    authDomain: \"royal-bazar-4cda1.firebaseapp.com\",\r\n    projectId: \"royal-bazar-4cda1\",\r\n    storageBucket: \"royal-bazar-4cda1.appspot.com\",\r\n    messagingSenderId: \"1083508214380\",\r\n    appId: \"1:1083508214380:web:7f6c6f9d703e049d4ca649\"\r\n};\r\n\r\n// Initialize Firebase\r\nconst firebaseApp = initializeApp(firebaseConfig);\r\n\r\nconst provider = new GoogleAuthProvider();\r\n\r\nprovider.setCustomParameters({\r\n    prompt : \"select_account\"\r\n});\r\n\r\nexport const auth = getAuth();\r\nexport const signInWithGooglePopup = async () => signInWithPopup(auth, provider);\r\n\r\nexport const db = getFirestore();\r\n\r\nexport const createUserDocumentFromAuth = async (userAuth, additionalInformation = {}) => {\r\n    if(!userAuth)return;\r\n\r\n    const userDocRef = doc(db, 'users', userAuth.uid);\r\n    //console.log(userDocRef);\r\n\r\n    const userSnapshot = await getDoc(userDocRef);\r\n    //console.log(userSnapshot);\r\n    //console.log(userSnapshot.exists());\r\n\r\n    if(!userSnapshot.exists()){\r\n        const  {displayName, email} = userAuth;\r\n        const createdAt = new Date();\r\n\r\n        try {\r\n            await setDoc(userDocRef,{\r\n                displayName,\r\n                email,\r\n                createdAt,\r\n                ...additionalInformation,\r\n            });\r\n        }catch(error){\r\n            console.log('error creating the user', error.message);\r\n        }\r\n    }\r\n\r\n    return userDocRef;\r\n};\r\nexport const createAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if(!email || !password)return;\r\n\r\n    return await createUserWithEmailAndPassword(auth, email, password);\r\n};\r\n\r\nexport const SignInAuthUserWithEmailAndPassword = async (email, password) => {\r\n    if(!email || !password)return;\r\n\r\n    return await signInWithEmailAndPassword(auth, email, password);\r\n};"],"mappings":"AAAA,SAAQA,aAAa,QAAO,cAAc;AAC1C,SAAQC,OAAO,EACXC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,EAClBC,8BAA8B,EAC9BC,0BAA0B,QACnB,eAAe;AAC1B,SACIC,YAAY,EACZC,GAAG,EACHC,MAAM,EACNC,MAAM,QACK,oBAAoB;;AAEnC;AACA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,mCAAmC;EAC/CC,SAAS,EAAE,mBAAmB;EAC9BC,aAAa,EAAE,+BAA+B;EAC9CC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE;AACX,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGlB,aAAa,CAACW,cAAc,CAAC;AAEjD,MAAMQ,QAAQ,GAAG,IAAIf,kBAAkB,CAAC,CAAC;AAEzCe,QAAQ,CAACC,mBAAmB,CAAC;EACzBC,MAAM,EAAG;AACb,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGrB,OAAO,CAAC,CAAC;AAC7B,OAAO,MAAMsB,qBAAqB,GAAG,MAAAA,CAAA,KAAYpB,eAAe,CAACmB,IAAI,EAAEH,QAAQ,CAAC;AAEhF,OAAO,MAAMK,EAAE,GAAGjB,YAAY,CAAC,CAAC;AAEhC,OAAO,MAAMkB,0BAA0B,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,qBAAqB,GAAG,CAAC,CAAC,KAAK;EACtF,IAAG,CAACD,QAAQ,EAAC;EAEb,MAAME,UAAU,GAAGpB,GAAG,CAACgB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACG,GAAG,CAAC;EACjD;;EAEA,MAAMC,YAAY,GAAG,MAAMrB,MAAM,CAACmB,UAAU,CAAC;EAC7C;EACA;;EAEA,IAAG,CAACE,YAAY,CAACC,MAAM,CAAC,CAAC,EAAC;IACtB,MAAO;MAACC,WAAW;MAAEC;IAAK,CAAC,GAAGP,QAAQ;IACtC,MAAMQ,SAAS,GAAG,IAAIC,IAAI,CAAC,CAAC;IAE5B,IAAI;MACA,MAAMzB,MAAM,CAACkB,UAAU,EAAC;QACpBI,WAAW;QACXC,KAAK;QACLC,SAAS;QACT,GAAGP;MACP,CAAC,CAAC;IACN,CAAC,QAAMS,KAAK,EAAC;MACTC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEF,KAAK,CAACG,OAAO,CAAC;IACzD;EACJ;EAEA,OAAOX,UAAU;AACrB,CAAC;AACD,OAAO,MAAMY,kCAAkC,GAAG,MAAAA,CAAOP,KAAK,EAAEQ,QAAQ,KAAK;EACzE,IAAG,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAC;EAEvB,OAAO,MAAMpC,8BAA8B,CAACiB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;AACtE,CAAC;AAED,OAAO,MAAMC,kCAAkC,GAAG,MAAAA,CAAOT,KAAK,EAAEQ,QAAQ,KAAK;EACzE,IAAG,CAACR,KAAK,IAAI,CAACQ,QAAQ,EAAC;EAEvB,OAAO,MAAMnC,0BAA0B,CAACgB,IAAI,EAAEW,KAAK,EAAEQ,QAAQ,CAAC;AAClE,CAAC;AAACE,EAAA,GAJWD,kCAAkC;AAAA,IAAAC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}